[tool:pytest]
# ViewTrendsSL - Pytest Configuration
# Configuration file for pytest testing framework

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Minimum version of pytest required
minversion = 7.0

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# =============================================================================
# OUTPUT & REPORTING
# =============================================================================

# Console output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --code-highlight=yes

# Coverage configuration
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-fail-under=80
    --cov-branch

# =============================================================================
# TEST MARKERS
# =============================================================================

# Custom test markers for categorization
markers =
    unit: Unit tests - test individual components in isolation
    integration: Integration tests - test component interactions
    slow: Slow running tests (> 5 seconds)
    fast: Fast running tests (< 1 second)
    api: API endpoint tests
    database: Database related tests
    ml: Machine learning tests
    auth: Authentication tests
    prediction: Prediction service tests
    analytics: Analytics service tests
    data_collection: Data collection tests
    feature_engineering: Feature engineering tests
    performance: Performance tests
    security: Security tests
    smoke: Smoke tests - basic functionality verification
    regression: Regression tests - prevent known bugs
    acceptance: User acceptance tests
    e2e: End-to-end tests
    external: Tests requiring external services
    mock: Tests using mocked dependencies

# =============================================================================
# FILTERING & SELECTION
# =============================================================================

# Default test selection (can be overridden with -m)
# Run fast tests by default, skip slow ones unless explicitly requested
# addopts = -m "not slow"

# =============================================================================
# WARNINGS & DEPRECATIONS
# =============================================================================

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*distutils.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning

# =============================================================================
# LOGGING
# =============================================================================

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log file configuration
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# =============================================================================
# TIMEOUTS
# =============================================================================

# Test timeout configuration
timeout = 300
timeout_method = thread

# =============================================================================
# PARALLEL EXECUTION
# =============================================================================

# Parallel execution with pytest-xdist
# Uncomment to enable parallel testing
# addopts = -n auto

# =============================================================================
# FIXTURES
# =============================================================================

# Fixture configuration
# usefixtures = 

# =============================================================================
# COLLECTION
# =============================================================================

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py",
    "migrations/",
    "venv/",
    ".venv/",
    "env/",
    ".env/",
    "node_modules/",
    ".git/",
    "__pycache__/",
    ".pytest_cache/",
    "build/",
    "dist/",
    ".tox/",
    "docs/",
    "scripts/",
    "data/",
    "models/",
    "logs/"
]

# =============================================================================
# MOCK CONFIGURATION
# =============================================================================

# Mock configuration
mock_use_standalone_module = true

# =============================================================================
# DATABASE TESTING
# =============================================================================

# Database testing configuration
# These will be used by pytest-postgresql and other database fixtures
# postgresql_proc_port = 5433
# postgresql_proc_unixsocketdir = /tmp

# =============================================================================
# ASYNCIO CONFIGURATION
# =============================================================================

# Asyncio configuration for async tests
asyncio_mode = auto

# =============================================================================
# BENCHMARK CONFIGURATION
# =============================================================================

# Benchmark configuration for pytest-benchmark
benchmark_only = false
benchmark_sort = mean
benchmark_compare_fail = mean:10%
benchmark_min_rounds = 5
benchmark_max_time = 1.0
benchmark_min_time = 0.000005
benchmark_timer = time.perf_counter
benchmark_disable_gc = false
benchmark_warmup = false
benchmark_warmup_iterations = 100000

# =============================================================================
# CUSTOM CONFIGURATION
# =============================================================================

# Custom pytest configuration options
# Add project-specific configurations here

# Test data directory
testdata_dir = tests/data

# Mock data configuration
mock_data_seed = 42

# API testing configuration
api_base_url = http://localhost:5000
api_timeout = 30

# Database testing
test_database_url = sqlite:///test_viewtrendssl.db

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================

# Environment variables for testing
env = 
    TESTING = true
    FLASK_ENV = testing
    DATABASE_URL = sqlite:///test_viewtrendssl.db
    YOUTUBE_API_KEY_1 = test_key_1
    YOUTUBE_API_KEY_2 = test_key_2
    YOUTUBE_API_KEY_3 = test_key_3
    JWT_SECRET_KEY = test_jwt_secret
    SECRET_KEY = test_secret_key
    REDIS_URL = redis://localhost:6379/15
    LOG_LEVEL = DEBUG
    CACHE_TYPE = simple
    RATE_LIMIT_STORAGE_URL = memory://
